this.ThreadUtils = function() {};

/*
Class to facilitate deleting and optionally banning an IP.  Attaches a click handler to the individual IP divs in each message of the thread.
*/
this.ThreadUtils.DeleteAndBan = function() {
  //These will hold the target message number to delete, and any IP address information associated with it.
  this.messageNum = '';
  this.ipAddress = '';
  //This holds the current AJAX operation.
  this.ajaxRequest = '';
  //Any return codes or messages will be placed in these arrays.
  this.ajaxResponseCodes;
  this.ajaxResponseTexts;
  
  $('#input-alsoban').click(function(e) {
    //Show teaser if user is not Pro.
    if(ThreadUtils.isPro != '1') {
      $('#p-ban-pro-teaser').fadeIn('fast');
      //Prevent the box from being checked.
      return false;
    }
  });
  
  //Global AJAX status handler.
  $(document).ajaxStart(function() {
    //This *should* scope these operations to using the delete dialog.
    if($('#div-delete-message-dialog').is(':visible')) {
      //Change to the "activity" view, with just the spinner and an explanation of what's going on.
      //Also hide the controls so the user cannot resubmit a request.  The "x" at the top corner (or pressing "ESC") still leaves a way out.
      $('#div-delete-message-dialog .threadutils-dialog-spinner').show();
      $('#div-delete-message-dialog .threadutils-question-container').hide();
      $('#div-delete-message-dialog').parent().find('.ui-dialog-buttonpane').hide();
    }
  });
  
  $(document).ajaxStop(function() {
    if($('#div-delete-message-dialog').is(':visible')) {
      //Loop through any AJAX responses and check for any error condition.  Any return code other than 1 indicates an error.
      var rCode = '';
      var rText = '';
      var errorText = '';
      
      //Build an error string, in case there is more than one error.
      while((rCode = ThreadUtils.DeleteAndBan.ajaxResponseCodes.pop()) != null) {
        rText = ThreadUtils.DeleteAndBan.ajaxResponseTexts.pop();
                
        if(rCode != 1) {
          if(rText) {
            errorText += rText + '<br />';
          } else {
            //Some generic error text if none was provided.
            errorText += 'There was an error while processing your request (error code: ' + rCode + ').  Please try again later.<br />';
          }
        }
      }

      if(errorText) {
        //There were errors, so stop the spinner and show the error message in the dialog.
        $('#div-delete-message-dialog .threadutils-dialog-spinner').hide();
        $('#div-delete-message-dialog .threadutils-dialog-error').html(errorText).show();
        //Also restore the button panel, but remove the yes and no buttons and add an OK button.
        $('#div-delete-message-dialog').dialog("option", "buttons", {
           'OK': {
               text: 'OK',
               click: function() {
                 //When there's an error, just refresh the page.
                 //This is a workaround e.g. the case where an IP is
                 //already banned (yielding an error), but the message delete was still successful.
                 //Now we just submit the normal nav form since the page values should already be filled out.
                 $('form[name=PageNav]').submit();
               },
            }
            });
        $('#div-delete-message-dialog').parent().find('.ui-dialog-buttonpane').show();
        $('#div-delete-message-dialog').parent().find('.ui-dialog-buttonpane').find(':button.error-shown').show();
        $('#div-delete-message-dialog').parent().find('.ui-dialog-buttonpane').find(':button.error-hidden').hide();
      } else {
        //No AJAX errors.  Now we can reload the page!
        $('form[name=PageNav]').submit();
      }
    }
  });
  
  $('#div-delete-message-dialog').dialog({
    title: 'Confirm Delete',
    autoOpen: false,
    resizable: true,
    width: 300,
    modal: true,
    buttons: {
      'Yes': {
        text: 'Yes',
        click: function() {
          var dataCommon = 'f=' + ThreadUtils.forumID + '&t=' + ThreadUtils.topicID + '&restful=1';

          ThreadUtils.DeleteAndBan.ajaxRequest = $.ajax({
            type: 'POST',
            dataType: 'json',
            url: ThreadUtils.adminPath,
            data: dataCommon + '&delete=' + ThreadUtils.DeleteAndBan.messageNum + '&mode=submit_delete_messages',
            timeout: 20000,
            success: function(data, testStatus, jqXHR) {
              //The request was a "success", but might not actually be successful if the script itself returned some sort of error.
              handleAjaxSuccess(data, testStatus, jqXHR);
            },
            error: function(jqXHR, textStatus, errorThrown) {
              //There was some problem with the HTTP request.
              handleAjaxError(jqXHR, textStatus, errorThrown);
            },
          });

          //Also do an IP ban if user wants it.
          if($('#input-alsoban').attr('checked') && ThreadUtils.DeleteAndBan.ipAddress) {
            ThreadUtils.DeleteAndBan.ajaxRequest = $.ajax({
              type: 'POST',
              dataType: 'json',
              url: ThreadUtils.adminPath,
              data: dataCommon + '&ipaddr=' + ThreadUtils.DeleteAndBan.ipAddress + '&mode=submit_ban',
              timeout: 20000,
              success: function(data, testStatus, jqXHR) {
                //The request was a "success", but might not actually be successful if the script itself returned some sort of error.
                handleAjaxSuccess(data, testStatus, jqXHR);
              },
              error: function(jqXHR, textStatus, errorThrown) {
                handleAjaxError(jqXHR, textStatus, errorThrown);
              },
            });
          }
          
          //...And see if the user wants to report spam.
          if($('#input-reportspam').attr('checked')) {
            ThreadUtils.DeleteAndBan.ajaxRequest = $.ajax({
              type: 'POST',
              dataType: 'json',
              url: ThreadUtils.adminPath,
              data: dataCommon + '&m=' + ThreadUtils.DeleteAndBan.messageNum + '&mode=submit_report_spam',
              timeout: 20000,
              success: function(data, testStatus, jqXHR) {
                //The request was a "success", but might not actually be successful if the script itself returned some sort of error.
                handleAjaxSuccess(data, testStatus, jqXHR);
              },
              error: function(jqXHR, textStatus, errorThrown) {
                handleAjaxError(jqXHR, textStatus, errorThrown);
              },
            });
          }
        },
      },
      'No': {
        text: 'No',
        click: function() {
          $(this).dialog('close');
        },
      },
    },
    open: function() {
      var banChecked = ThreadUtils.isPro === '1' ? true : false;
      $('#div-delete-message-dialog .threadutils-question-container').show();
      $('#div-delete-message-dialog .threadutils-dialog-spinner').hide();
      $('#input-alsoban').attr('checked', banChecked);
      $('#input-reportspam').attr('checked', true);
      //Initialize the error data arrays.
      ThreadUtils.DeleteAndBan.ajaxResponseCodes = new Array();
      ThreadUtils.DeleteAndBan.ajaxResponseTexts = new Array();
    },
    close: function() {
      $('#div-delete-message-dialog .threadutils-dialog-error').html('').hide();
      $('#p-ban-pro-teaser').hide();
      //Showing the buttons here instead of in open makes the dialog size stay consistent.
      $('#div-delete-message-dialog').parent().find('.ui-dialog-buttonpane').show();
      //Cancel any outstanding AJAX requests when closing out of the dialog.
      if(ThreadUtils.DeleteAndBan.ajaxRequest) {
        ThreadUtils.DeleteAndBan.ajaxRequest.abort();
        ThreadUtils.DeleteAndBan.ajaxRequest = '';
      }
    }
  });
  
  $('.messagedata-ip').click(function(e) {
    //Get some data out of this message's row.
    var fullIpText = $(this).text();
    var messageNum = $(this).siblings('.topic-messagenumberpos').text();
    var ipAddress = parseIp(fullIpText);
    
    if(messageNum) {
      ThreadUtils.DeleteAndBan.messageNum = messageNum;
      if(ipAddress) {
        ThreadUtils.DeleteAndBan.ipAddress = ipAddress;
      }
      
      $('#div-delete-message-dialog').dialog('open');
    }
  });
  
  //Extract the IP alone from the text given.  Expected form should be like "IP: nnn.nnn.nnn.nnn".
  function parseIp(text) {  
    var ipRegEx = /^IP: (\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})$/
    var ip = ipRegEx.exec(text);

    if(text && ip) {
      return ip[1];
    }
    
    return '';
  }
  
  //This will handle any "error" events thrown by our jQuery AJAX requests.
  function handleAjaxError(jqXHR, textStatus, errorThrown) {
    //Assume there was some sort of error if we've ended up here.
    var errorCode = 0;
    var errorText = 'There was an error while processing your request.';
    
    //Handle the various AJAX error types returned by jQuery.
    switch(textStatus) {
      case 'timeout':
        errorText = 'Your request did not complete.  Please try again later.';
        break;
        
      case 'error':
        errorCode = jqXHR.status;
        errorText = 'There was a server error while processing your request: ' + (jqXHR.statusText ? jqXHR.statusText : (errorThrown ? errorThrown : '')) + ' (' + errorCode + ')';
        break;
        
      case 'abort':
        //Just ignore abort errors.
        errorCode = 1;
        errorText = '';
        break;
        
      case 'parsererror':
        //Not a valid JSON response?
        errorText = 'There was an error while interpreting your request.';
        break;
        
      default:
        break;
    }
    
    ThreadUtils.DeleteAndBan.ajaxResponseCodes.push(errorCode);
    ThreadUtils.DeleteAndBan.ajaxResponseTexts.push(errorText);
  }
  
  function handleAjaxSuccess(data, testStatus, jqXHR) {
    ThreadUtils.DeleteAndBan.ajaxResponseCodes.push(data.returnCode);
    ThreadUtils.DeleteAndBan.ajaxResponseTexts.push(data.returnText);
  }
};

$(function() {  
  if(ThreadUtils.isAdmin == '1') {
    ThreadUtils.DeleteAndBan();
  }
}); 
